CREATE TABLE street(
	street_id SERIAL PRIMARY KEY,
	street_name VARCHAR(255) NOT NULL,
	street_number VARCHAR(255) NOT NULL
);

CREATE TABLE city(
	city_id SERIAL PRIMARY KEY,
	city_name VARCHAR(255) NOT NULL
);

CREATE TABLE country(
	country_id SERIAL PRIMARY KEY,
	country_name VARCHAR(255) NOT NULL
);

CREATE TABLE address(
	address_id SERIAL PRIMARY KEY,
	city_id INT NOT NULL,
	street_id INT NOT NULL,
	country_id INT NOT NULL,
	FOREIGN KEY (city_id)
	REFERENCES city(city_id),
	FOREIGN KEY (street_id)
	REFERENCES street(street_id),
	FOREIGN KEY (country_id)
	REFERENCES country(country_id)
);

CREATE TABLE store(
	store_id SERIAl PRIMARY KEY,
	store_name VARCHAR(255),
	store_capacity INT NOT NULL,
	address_id INT NOT NULL,
	FOREIGN KEY (address_id)
	REFERENCES address(address_id)
);

CREATE TABLE stock(
	stock_id SERIAL PRIMARY KEY,
	stock_name VARCHAR(255),
	stock_capacity INT NOT NULL,
	address_id INT NOT NULL,
	FOREIGN KEY (address_id)
	REFERENCES address(address_id)
);

CREATE TABLE distance(
	distance_id SERIAL PRIMARY KEY,
	store_id INT NOT NULL,
	stock_id INT NOT NULL,
	distance_value FLOAT NOT NULL
);

CREATE TABLE product_category(
	product_category_id SERIAL PRIMARY KEY,
	product_category_name VARCHAR(255)
);

CREATE TABLE product(
	product_id SERIAL PRIMARY KEY,
	product_name VARCHAR(255),
	product_category_id INT NOT NULL,
	FOREIGN KEY (product_category_id)
	REFERENCES product_category(product_category_id)
);

CREATE TABLE warehouse(
	warehouse_id SERIAL PRIMARY KEY,
	product_id INT NOT NULL,
	stock_id INT NOT NULL,
	actual_amount INT NOT NULL,
	fictitious_amount INT NOT NULL,
	FOREIGN KEY (product_id) 
	REFERENCES product(product_id),
	FOREIGN KEY (stock_id)
	REFERENCES stock(stock_id)
);

CREATE TABLE stockhouse(
	stockhouse_id SERIAL PRIMARY KEY,
	product_id INT NOT NULL,
	store_id INT NOT NULL,
	amount INT NOT NULL,
	FOREIGN KEY (product_id) 
	REFERENCES product(product_id),
	FOREIGN KEY (store_id)
	REFERENCES store(store_id)
);

CREATE TABLE store_order(
	store_order_id SERIAL PRIMARY KEY,
	product_id INT NOT NULL,
	amount INT NOT NULL,
	FOREIGN KEY (product_id) 
	REFERENCES product(product_id)
);

CREATE TABLE itinerary(
	itinerary_id SERIAL PRIMARY KEY,
	stock_id INT NOT NULL,
	product_id INT NOT NULL,
	order_sequence INT NOT NULL,
	FOREIGN KEY (product_id) 
	REFERENCES product(product_id),
	FOREIGN KEY (stock_id)
	REFERENCES stock(stock_id)
);

CREATE TABLE user_role(
	user_role_id SERIAL PRIMARY KEY,
	role_name VARCHAR(255) NOT NULL
);

CREATE TABLE system_user(
	system_user_id SERIAL PRIMARY KEY,
	user_role_id INT NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(72) NOT NULL,
	FOREIGN KEY (user_role_id)
	REFERENCES user_role(user_role_id)
);

CREATE TABLE driver_status(
	driver_status_id SERIAL PRIMARY KEY,
	driver_status_name VARCHAR(255) NOT NULL
);

CREATE TABLE vehicle(
	vehicle_id SERIAL PRIMARY KEY,
	vehicle_number VARCHAR(255) NOT NULL
);

CREATE TABLE driver(
	system_user_id SERIAL PRIMARY KEY,
	driver_status_id INT NOT NULL,
	vehicle_id INT NOT NULL,
	FOREIGN KEY (vehicle_id)
	REFERENCES vehicle(vehicle_id),
	FOREIGN KEY (driver_status_id)
	REFERENCES driver_status(driver_status_id),
	FOREIGN KEY (system_user_id)
	REFERENCES system_user(system_user_id)
);

CREATE TABLE trip(
	trip_id SERIAL PRIMARY KEY,
	store_id INT NOT NULL,
	system_user_id INT NOT NULL,
	store_order_id INT NOT NULL,
	itinerary_id INT NOT NULL,
	FOREIGN KEY (system_user_id)
	REFERENCES system_user(system_user_id),
	FOREIGN KEY (store_id)
	REFERENCES store(store_id),
	FOREIGN KEY (itinerary_id)
	REFERENCES itinerary(itinerary_id),
	FOREIGN KEY (store_order_id)
	REFERENCES store_order(store_order_id)
);




